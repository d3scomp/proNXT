195,196d194
< RAM_TARGET = $(TARGET)_ram.elf
< RXE_TARGET = $(TARGET)_rxe.elf
199,200d196
< RAMBIN_TARGET = $(TARGET)_ram.bin
< RXEBIN_TARGET = $(TARGET).rxe
203,204d198
< RAM_LDSCRIPT = $(O_PATH)/$(TARGET)_ram.ld
< RXE_LDSCRIPT = $(O_PATH)/$(TARGET)_rxe.ld
221c215
< ALL_TARGETS = $(ROM_TARGET) $(ROMBIN_TARGET) $(RAM_TARGET) $(RAMBIN_TARGET) $(RXE_TARGET) $(RXEBIN_TARGET) biosflash appflash ramboot rxeflash
---
> ALL_TARGETS = $(ROM_TARGET) $(ROMBIN_TARGET) appflash
224,230c218
< ALL_TARGETS = $(ROM_TARGET) $(ROMBIN_TARGET) biosflash appflash
< else
< ifeq ($(BUILD_MODE), RAM_ONLY)
< ALL_TARGETS = $(RAM_TARGET) $(RAMBIN_TARGET) ramboot
< else
< ifeq ($(BUILD_MODE), RXE_ONLY)
< ALL_TARGETS = $(RXE_TARGET) $(RXEBIN_TARGET) rxeflash
---
> ALL_TARGETS = $(ROM_TARGET) $(ROMBIN_TARGET) appflash
235,237d222
< endif
< endif
< 
259,264d243
< $(RXE_LDSCRIPT): $(LDSCRIPT_SOURCE)
< 	sed -e 's/^RXE_ONLY//' -e '/^RAM_ONLY/d' -e '/^ROM_ONLY/d' $< >$@
< 
< $(RAM_LDSCRIPT): $(LDSCRIPT_SOURCE)
< 	sed -e 's/^RAM_ONLY//' -e '/^ROM_ONLY/d' -e '/^RXE_ONLY/d' $< >$@
< 
268,273d246
< $(RXE_TARGET): $(C_OBJECTS) $(CC_OBJECTS) $(S_OBJECTS) $(WAV_OBJECTS) $(BMP_OBJECTS) $(SPR_OBJECTS) $(RXE_LDSCRIPT)
< 	$(LD) -o $@ $(C_OBJECTS) $(CC_OBJECTS) $(S_OBJECTS) $(WAV_OBJECTS) $(BMP_OBJECTS) $(SPR_OBJECTS) -T $(RXE_LDSCRIPT) $(LDFLAGS) $(EXTRALIBS)
< 
< $(RAM_TARGET): $(C_OBJECTS) $(CC_OBJECTS) $(S_OBJECTS) $(WAV_OBJECTS) $(BMP_OBJECTS) $(SPR_OBJECTS) $(RAM_LDSCRIPT)
< 	$(LD) -o $@ $(C_OBJECTS) $(CC_OBJECTS) $(S_OBJECTS) $(WAV_OBJECTS) $(BMP_OBJECTS) $(SPR_OBJECTS) -T $(RAM_LDSCRIPT) $(LDFLAGS) $(EXTRALIBS)
< 
281,288d253
< $(RAMBIN_TARGET): $(RAM_TARGET)
< 	@echo "Generating binary image file: $@"
< 	$(OBJCOPY) -O binary $< $@
< 
< $(RXEBIN_TARGET): $(RXE_TARGET)
< 	@echo "Generating binary image file: $@"
< 	$(OBJCOPY) -O binary $< $@
< 
290,306c255
< ifneq "$(OS)" "Windows_NT"
< WINECONSOLE := wineconsole
< endif
< 
< # Detect OS name 
< UNAME := $(shell uname)
< ifeq ($(UNAME), Darwin)
< 	# Mac OS X detected.
< 	# Use WineBottler's startwine script to launch wineconsole
< 	# in order to proper set up environment variables and avoid warnings.
< 	WINECONSOLE := /Applications/Wine.app/Contents/MacOS/startwine wineconsole
< 	# Native tools for Mac OS X doesn't need any launcher
< 	LAUNCHER := 
< else
< 	# for other OS (e.g. Linux) launch *.exe via pre-defined $(WINECONSOLE)
< 	LAUNCHER := $(WINECONSOLE)
< endif
---
> WINECONSOLE := wine
323,328d271
< .PHONY: biosflash
< biosflash:
< 	@echo "echo Executing NeXTTool to upload $(ROOT)/ecrobot/bios/nxt_bios_rom.rfw..." >./biosflash.sh
< 	@echo "$(LAUNCHER) $(NEXTTOOL_ROOT)/$(NEXTTOOL) /COM=usb -firmware=$(ROOT)/ecrobot/bios/nxt_bios_rom.rfw" >>./biosflash.sh
< 	chmod 700 ./biosflash.sh
< 
332c275
< 	@echo "$(LAUNCHER) $(ROOT)/bin/$(APPFLASH) ./$(ROMBIN_TARGET)" >>./appflash.sh
---
> 	@echo "$(ROOT)/bin/$(APPFLASH) ./$(ROMBIN_TARGET)" >>./appflash.sh
334,347d276
< 
< .PHONY: ramboot
< ramboot:
< 	@echo "echo Executing ramboot to upload $(RAMBIN_TARGET)..." >./ramboot.sh
< 	@echo "$(LAUNCHER) $(ROOT)/bin/$(RAMBOOT) ./$(RAMBIN_TARGET)" >>./ramboot.sh
< 	chmod 700 ./ramboot.sh
< 
< .PHONY: rxeflash
< rxeflash:
< 	@echo "echo Executing NeXTTool to upload $(RXEBIN_TARGET)..." >./rxeflash.sh
< 	@echo "$(LAUNCHER) $(NEXTTOOL_ROOT)/$(NEXTTOOL) /COM=usb -download=$(RXEBIN_TARGET)" >>./rxeflash.sh
< 	@echo "$(LAUNCHER) $(NEXTTOOL_ROOT)/$(NEXTTOOL) /COM=usb -listfiles=$(RXEBIN_TARGET)" >>./rxeflash.sh
< 	@echo "echo NeXTTool is terminated."  >>./rxeflash.sh
< 	chmod 700 ./rxeflash.sh
